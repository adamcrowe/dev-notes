/*
PATH=$PATH:/usr/local/sbin
alias composer="php /usr/local/bin/composer.phar"
parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
#export PS1="\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\[\033[0;37m\]\$(parse_git_branch)\[\033[00m\]$ "
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
if [ -f /Users/olliekett/.git-completion.bash ]; then
        . /Users/olliekett/.git-completion.bash
fi
*/

/* 
.bash_profile:
PATH=$PATH:/usr/local/sbin
alias composer="php /usr/local/bin/composer.phar"
parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

#export PS1="\u@\h \W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\[\033[0;37m\]\$(p$
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
```
if [ -f ~/.git-completion.bash ]; then
        .~/.git-completion.bash
fi

# Check if bash aliases.
if [ -f ~/.bash_aliases ]; then
        source ~/.bash_aliases;
fi

export EDITOR=/usr/bin/nano
```
*/


/*
ADD GIT BRANCH TO TERMINAL PSI
# via: https://techcommons.stanford.edu/topics/git/show-git-branch-bash-prompt
parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/()/'
}

# add git branch to prompt
export PS1="\[\033]0;\h:\W\007\]\h:\W\$(parse_git_branch)] "
*/

/*
# cd_func setup: alias cd=cd_func
# cd_func usage: $ cd --: get list of all of past directories 
# cd_func usage: $ cd -2: goto item 2 in the list

cd_func ()
{   
    local x2 the_new_dir adir index;
    local -i cnt;
    if [[ $1 == "--" ]]; then
        dirs -v;
        return 0;
    fi;
    the_new_dir=$1;
    [[ -z $1 ]] && the_new_dir=$HOME;
    if [[ ${the_new_dir:0:1} == '-' ]]; then
        index=${the_new_dir:1};
        [[ -z $index ]] && index=1;
        adir=$(dirs +$index);
        [[ -z $adir ]] && return 1;
        the_new_dir=$adir;
    fi;
    [[ ${the_new_dir:0:1} == '~' ]] && the_new_dir="${HOME}${the_new_dir:1}";
    pushd "${the_new_dir}" > /dev/null;
    [[ $? -ne 0 ]] && return 1;
    the_new_dir=$(pwd);
    popd -n +11 2> /dev/null > /dev/null;
    for ((cnt=1; cnt <= 10; cnt++))
    do  
        x2=$(dirs +${cnt} 2>/dev/null);
        [[ $? -ne 0 ]] && return 0;
        [[ ${x2:0:1} == '~' ]] && x2="${HOME}${x2:1}";
        if [[ "${x2}" == "${the_new_dir}" ]]; then
            popd -n +$cnt 2> /dev/null > /dev/null;
            cnt=cnt-1;
        fi;
    done;
    return 0
}

*/

/* Git Completion Script
https://git-scm.com/book/en/v1/Git-Basics-Tips-and-Tricks
*/